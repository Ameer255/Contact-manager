{"version":3,"sources":["reportWebVitals.js","Components/DisplayContacts/displayContact.js","Components/AddContactButton/addContactInfo.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DisplayContact","props","list","className","undefined","map","el","index","nam","num","onClick","key","contacts","filter","contact","updateList","localStorage","setItem","JSON","stringify","deleteItem","AddContact","React","useState","view","setView","name","setName","number","setNumber","setList","parse","getItem","onSubmit","event","preventDefault","target","elements","value","contactNum","newContact","push","htmlFor","type","id","onChange","e","placeholder","required","newList","App","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"qKAYeA,G,KAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,cCgCCQ,MArCf,SAAwBC,GAEpB,IAAIC,EAAOD,EAAMC,KAajB,OACI,qBAAKC,UAAU,yBAAf,SAECD,QAAkBE,IAAVF,EAAK,GAAgBA,EAAKG,KAAI,SAACC,EAAIC,GAC1C,OACA,+BACE,sBAAKJ,UAAU,eAAf,UACD,iCAASG,EAAGE,MAAa,uBACzB,uCAAUF,EAAGG,IAAb,UAEA,8BACC,wBAAQN,UAAU,SAASO,QAAS,kBArBzB,SAACC,GAEhB,IAAIC,EAAW,YAAIV,GAAMW,QAAO,SAACC,EAASP,GAAV,OAAoBA,IAAUI,KAC9DV,EAAMc,WAAWH,GACjBI,aAAaC,QAAQ,WAAYC,KAAKC,UAAUP,IAiBFQ,CAAWb,IAArD,wBANOA,MAWN,sBAAKJ,UAAU,cAAf,cAA8B,iEAA9B,UCmFEkB,MA9Gf,WAAuB,IAAD,EAGEC,IAAMC,UAAS,GAHjB,mBAGfC,EAHe,KAGTC,EAHS,OAIEH,IAAMC,SAAS,IAJjB,mBAIfG,EAJe,KAITC,EAJS,OAKML,IAAMC,WALZ,mBAKfK,EALe,KAKPC,EALO,OAMEP,IAAMC,SAAS,IANjB,mBAMfrB,EANe,KAMT4B,EANS,KA6DpB,OAjCA5B,EAAQgB,KAAKa,MAAMf,aAAagB,QAAQ,aAkCtC,mCAGE,sBAAK7B,UAAU,iBAAf,UAEJ,wBAAQA,UAAU,cAAcO,QA1DhC,WACSe,GAAPD,IAyDF,SAAuDA,EAAO,SAAW,gBAEvEA,EAEG,qBAAKrB,UAAU,eAAf,SACK,uBAAM8B,SApChB,SAAcC,GACZA,EAAMC,iBACNR,EAAQO,EAAME,OAAOC,SAASX,KAAKY,OACnCT,EAAUK,EAAME,OAAOC,SAASE,WAAWD,OAC3CR,EAAWZ,KAAKa,MAAMf,aAAagB,QAAQ,aAI3C,IAAIQ,EAAa,CAAChC,IAAMkB,EAAMjB,IAAMmB,GAGjC1B,GAEDA,EAAKuC,KAAKD,GACVxB,aAAaC,QAAQ,WAAYC,KAAKC,UAAUjB,KAKhDc,aAAaC,QAAQ,WAAYC,KAAKC,UAAU,CAACqB,KAErDf,GAAQ,IAeE,UACE,uBAAOiB,QAAQ,OAAf,0BACA,uBAAOC,KAAK,OACXC,GAAG,OACHC,SA7Db,SAAoBC,GAElBnB,EAAQmB,EAAEV,OAAOE,QA4DLS,YAAY,OACZC,SAAS,aAET,uBAEF,uBAAON,QAAQ,aAAf,6BACA,uBACEC,KAAK,SACLC,GAAG,aACHC,SAnEd,SAAsBC,GAEpBjB,EAAUiB,EAAEV,OAAOE,QAkEPS,YAAY,iBACZC,SAAS,aAhBb,IAiBK,uBAEH,qBAAK7C,UAAU,OAAf,SACA,wBAASwC,KAAK,SAAd,2BAIG,IAET,qBAAKxC,UAAU,yBAAf,SAEA,cAAC,EAAD,CAAgBD,KAAMA,EAAMa,WAtElC,SAAoBkC,GAClBnB,EAAQmB,cCjCG,SAASC,IACtB,OACE,qBAAK/C,UAAU,MAAf,SACE,cAAC,EAAD,MCDN,IAAMgD,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACN,EAAD,MAEFC,GAMF5D,K","file":"static/js/main.ccf70b9c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nfunction DisplayContact(props){\r\n\r\n    let list = props.list;\r\n\r\n\r\n    const deleteItem = (key) =>{\r\n\r\n        let contacts = [...list].filter((contact, index) => index !== key);\r\n        props.updateList(contacts);\r\n        localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n        \r\n    \r\n      }\r\n\r\n\r\n    return (\r\n        <div className=\"contact-list-container\">\r\n        \r\n        {list && list[0]!==undefined? list.map((el, index) =>{\r\n          return (\r\n          <li key={index}>\r\n            <div className=\"contact-item\">\r\n           <strong>{el.nam}</strong><br></br>\r\n           <strong> {el.num} </strong>\r\n           </div>\r\n           <div>\r\n            <button className=\"delete\" onClick={() => deleteItem(index)}>Delete</button>\r\n            </div>\r\n\r\n          </li>\r\n          )\r\n        }) : <div className=\"no-contacts\"> <h3>Empty, Please add some contacts</h3> </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayContact;","import React from \"react\";\r\nimport useEffect from \"react\";\r\nimport DisplayContact from \"../DisplayContacts/displayContact\"\r\n\r\n\r\n\r\nfunction AddContact() {\r\n\r\n\r\n  let [view, setView] = React.useState(false);\r\n  let [name, setName] = React.useState(\"\");\r\n  let [number, setNumber] = React.useState();\r\n  let [list, setList] = React.useState([]);\r\n\r\n \r\n  function handleClick(){\r\n    view ? setView(false) : setView(true);\r\n  }\r\n \r\n\r\n\r\n  function changeName(e){\r\n\r\n    setName(e.target.value);\r\n  }\r\n  function changeNumber(e){\r\n\r\n    setNumber(e.target.value);\r\n  }\r\n\r\n  \r\n\r\n \r\n \r\n  list = (JSON.parse(localStorage.getItem(\"contacts\")));\r\n\r\n  function updateList(newList){\r\n    setList(newList);\r\n  }\r\n  \r\n  \r\n\r\n  function save(event) {\r\n    event.preventDefault();\r\n    setName(event.target.elements.name.value);\r\n    setNumber(event.target.elements.contactNum.value);\r\n    setList = (JSON.parse(localStorage.getItem(\"contacts\")));\r\n\r\n    \r\n\r\n    let newContact = {nam : name, num : number};\r\n\r\n\r\n    if(list){\r\n\r\n      list.push(newContact);\r\n      localStorage.setItem(\"contacts\", JSON.stringify(list));\r\n      \r\n    }\r\n    else{\r\n      \r\n      localStorage.setItem(\"contacts\", JSON.stringify([newContact]));\r\n    }\r\n  setView(false);\r\n  }\r\n \r\n\r\n  return (\r\n    <>\r\n       \r\n\r\n      <div className=\"container-info\">\r\n\r\n  <button className=\"add-contact\" onClick={handleClick}>{view ? \"Cancel\" : \"Add Contact\"}</button>\r\n\r\n  { view ? \r\n       \r\n       <div className=\"contact-form\">\r\n            <form onSubmit={save}>\r\n              <label htmlFor=\"name\"> Enter Name </label>\r\n              <input type=\"text\"\r\n               id=\"name\" \r\n               onChange={changeName}\r\n                placeholder=\"Name\" \r\n                required=\"required\"\r\n                />\r\n                <br />\r\n              \r\n              <label htmlFor=\"contactNum\"> Enter Contact </label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"contactNum\"\r\n                onChange={changeNumber}\r\n                placeholder=\"Contact Number\"\r\n                required=\"required\"\r\n              /> <br />\r\n\r\n              <div className=\"save\">\r\n              <button  type=\"submit\"> Save </button>\r\n              </div>\r\n\r\n            </form>\r\n        </div> : \" \" }\r\n\r\n        <div className=\"contact-list-container\">\r\n\r\n        <DisplayContact list={list} updateList={updateList}/>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default AddContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n     \r\n\r\n  \r\n      \r\n\r\n","import React from \"react\";\nimport \"./index.css\";\nimport AddContact from \"./Components/AddContactButton/addContactInfo\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <AddContact />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}